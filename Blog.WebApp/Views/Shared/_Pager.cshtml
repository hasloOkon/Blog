@model Blog.WebApp.ViewModels.PagerViewModel

@{
    Func<int, string> getPageUrl = pageNumber =>
    {
        var searchInterfix = ViewContext.RouteData.Values["action"].ToString()
            .Equals("search", StringComparison.OrdinalIgnoreCase)
            ? string.Format("searchPhrase={0}&",
                ViewContext.RequestContext.HttpContext.Request.QueryString["searchPhrase"])
            : string.Empty;

        return string.Format("?{0}pageNumber={1}", searchInterfix, pageNumber);
    };
}

<div>
    @if (Model.EndPage > 1)
    {
        <ul class="pagination justify-content-center mt-2 mb-2 w-100">

            @if (Model.CurrentPage > 1)
            {
                <li class="page-item mr-2">
                    <a href="@getPageUrl(Model.CurrentPage - 1)" class="page-link"><</a>
                </li>
            }

            @if (Model.StartPage > 1)
            {
                <li class="page-item">
                    <a href="@getPageUrl(1)" class="page-link">1</a>
                </li>
                if (Model.StartPage > 2)
                {
                    <li class="page-item">
                        <div class="page-link">...</div>
                    </li>
                }
            }

            @for (var pageNumber = Model.StartPage; pageNumber <= Model.EndPage; pageNumber++)
            {
                <li class="page-item @(pageNumber == Model.CurrentPage ? "active" : "")">
                    <a href="@getPageUrl(pageNumber)" class="page-link">@pageNumber</a>
                </li>
            }

            @if (Model.EndPage < Model.TotalPages)
            {
                if (Model.EndPage + 1 < Model.TotalPages)
                {
                    <li class="page-item">
                        <div class="page-link">...</div>
                    </li>
                }
                <li class="page-item">
                    <a href="@getPageUrl(Model.TotalPages)" class="page-link">@Model.TotalPages</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item ml-2">
                    <a href="@getPageUrl(Model.CurrentPage + 1)" class="page-link">></a>
                </li>
            }
        </ul>
     }
</div>
