@model Blog.WebApp.ViewModels.PagerViewModel

@{
    Func<int, string> getPageUrl = pageNumber =>
    {
        var pageAction = string.Format("pageNumber={0}", pageNumber);

        if (ViewContext.RouteData.Values["action"].ToString()
        .Equals("search", StringComparison.OrdinalIgnoreCase))
        {
            var searchActionPrefix = string.Format("searchPhrase={0}", 
                ViewContext.RequestContext.HttpContext.Request.QueryString["searchPhrase"]);
            pageAction = string.Format("{0}&{1}", searchActionPrefix, pageAction);
        }

        pageAction = string.Format("?{0}", pageAction);

        return pageAction;
    };
}

<div>
    @if (Model.EndPage > 1)
    {
        <ul class="pagination justify-content-center mb-2">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a href="@getPageUrl(1)" class="page-link content-bg">First</a>
                </li>
                <li class="page-item">
                    <a href="@getPageUrl(Model.CurrentPage - 1)" class="page-link content-bg">Previous</a>
                </li>
            }

            @for (var pageNumber = Model.StartPage; pageNumber <= Model.EndPage; pageNumber++)
            {
                <li class="page-item @(pageNumber == Model.CurrentPage ? "active" : "")">
                    <a href="@getPageUrl(pageNumber)" class="page-link content-bg">@pageNumber</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a href="@getPageUrl(Model.CurrentPage + 1)" class="page-link content-bg">Next</a>
                </li>
                <li class="page-item">
                    <a href="@getPageUrl(Model.TotalPages)" class="page-link content-bg">Last</a>
                </li>
            }
        </ul>
    }
</div>
