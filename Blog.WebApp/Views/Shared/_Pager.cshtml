@model Blog.WebApp.ViewModels.PostsViewModel

@{
    var currentPage = ViewContext.RequestContext.HttpContext.Request["pageNumber"] != null
      ? int.Parse(ViewContext.RequestContext.HttpContext.Request["pageNumber"])
      : 1;

    var totalPages = Math.Ceiling((double)Model.TotalPosts / 10);
}

@if (currentPage > 1 || currentPage < totalPages)
{
    var previousPageAction = string.Format("pageNumber={0}", currentPage - 1);
    var nextPageAction = string.Format("pageNumber={0}", currentPage + 1);

    if (ViewContext.RouteData.Values["action"].ToString()
      .Equals("search", StringComparison.OrdinalIgnoreCase))
    {
        var searchActionPrefix = string.Format("?searchPhrase={0}", ViewContext.RequestContext.HttpContext.Request.QueryString["searchPhrase"]);
        previousPageAction = string.Format("{0}&{1}", searchActionPrefix, previousPageAction);
        nextPageAction = string.Format("{0}&{1}", searchActionPrefix, nextPageAction);
    }
    else
    {
        previousPageAction = string.Concat("?", previousPageAction);
        nextPageAction = string.Concat("?", nextPageAction);
    }
    
    <div class="pager">

        <a href="@previousPageAction" title="Previous" class="previous"
           style="visibility:@(currentPage > 1 ? "visible" : "collapse")"><< previous</a>

        <a href="@nextPageAction" title="Next" class="next"
           style="visibility:@(currentPage < totalPages ? "visible" : "collapse")">next >></a>

    </div>
}
