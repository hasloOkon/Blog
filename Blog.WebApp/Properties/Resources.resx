<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>O blogu</value>
  </data>
  <data name="AboutLink" xml:space="preserve">
    <value>O blogu...</value>
  </data>
  <data name="AboutPart1" xml:space="preserve">
    <value>Szpilkami na mapie zaczęłam oznaczać, które miejsca już odwiedziłam. Pamięć jest zawodna, i pytana, co udało mi się zwiedzić, musiałam przekopać trochę umysłu. Pokazanie mapy było prostsze.</value>
  </data>
  <data name="AboutPart2" xml:space="preserve">
    <value>Pytana, co działo się na danej wyprawie, męczyłam się jeszcze bardziej. Wspomnienia z czasem zaczynają blednąć, a aparat nie wszystko uchwyci. Dlatego zaczęłam robić notatki.</value>
  </data>
  <data name="AboutPart3" xml:space="preserve">
    <value>Stworzenie bloga jest dosyć popularnym zadaniem dla programisty chcącego przeszkolić się w technologiach webowych. Zaciągnęłam więc do wspólnego kodzenia pierwszego programistę, jakiego znalazłam, i po czasem mniej, a czasem bardziej owocnej współpracy, udało nam się stworzyć niniejszy blog.</value>
  </data>
  <data name="AboutPart4" xml:space="preserve">
    <value>Chcesz skrytykować? Wal.</value>
  </data>
  <data name="AddCategory" xml:space="preserve">
    <value>Nowa wyprawa</value>
  </data>
  <data name="AddLink" xml:space="preserve">
    <value>[+]</value>
  </data>
  <data name="AddPost" xml:space="preserve">
    <value>Nowy wpis</value>
  </data>
  <data name="AllRightsReserved" xml:space="preserve">
    <value>Wszelkie prawa zastrzeżone</value>
  </data>
  <data name="BlogName" xml:space="preserve">
    <value>Szpilką Po Mapie</value>
  </data>
  <data name="BrowseImagesLink" xml:space="preserve">
    <value>[przeglądaj grafiki]</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Wyprawy</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Wyprawa</value>
  </data>
  <data name="CategoryDescription" xml:space="preserve">
    <value>Opis</value>
  </data>
  <data name="CategoryLinkTitle" xml:space="preserve">
    <value>Wpisy z wyprawy: {0}</value>
  </data>
  <data name="CategoryName" xml:space="preserve">
    <value>Nazwa</value>
  </data>
  <data name="CategoryNotFound" xml:space="preserve">
    <value>Nie znaleziono wyprawy :(</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>Copyright</value>
  </data>
  <data name="DeleteCategoryConfirmationMessage" xml:space="preserve">
    <value>Czy na pewno chcesz usunąć wyprawę "{0}"?</value>
  </data>
  <data name="DeleteImageConfirmationMessage" xml:space="preserve">
    <value>Czy na pewno chcesz usunąć grafikę?</value>
  </data>
  <data name="DeleteLink" xml:space="preserve">
    <value>[usuń]</value>
  </data>
  <data name="DeletePostConfirmationMessage" xml:space="preserve">
    <value>Czy na pewno chcesz usunąć wpis "{0}"?</value>
  </data>
  <data name="DeleteTagConfirmationMessage" xml:space="preserve">
    <value>Czy na pewno chcesz usunąć taga "{0}"?</value>
  </data>
  <data name="EditCategory" xml:space="preserve">
    <value>Edytuj wyprawę</value>
  </data>
  <data name="EditLink" xml:space="preserve">
    <value>[edytuj]</value>
  </data>
  <data name="EditPost" xml:space="preserve">
    <value>Edytuj wpis</value>
  </data>
  <data name="EditTag" xml:space="preserve">
    <value>Edytuj taga</value>
  </data>
  <data name="ExistingImages" xml:space="preserve">
    <value>Istniejące grafiki</value>
  </data>
  <data name="Images" xml:space="preserve">
    <value>Grafiki</value>
  </data>
  <data name="ImagesLink" xml:space="preserve">
    <value>[grafiki]</value>
  </data>
  <data name="LatestPosts" xml:space="preserve">
    <value>Ostatnie wpisy</value>
  </data>
  <data name="LatestPostsForCategory" xml:space="preserve">
    <value>Ostatnie wpisy dla wyprawy "{0}":</value>
  </data>
  <data name="LatestPostsForTag" xml:space="preserve">
    <value>Ostatnie wpisy dla taga "{0}":</value>
  </data>
  <data name="LoginAction" xml:space="preserve">
    <value>Zaloguj</value>
  </data>
  <data name="LoginPage" xml:space="preserve">
    <value>Logowanie</value>
  </data>
  <data name="LoginUnsuccessful" xml:space="preserve">
    <value>Podana nazwa użytkownika lub hasło są nieprawidłowe.</value>
  </data>
  <data name="LogoLine1" xml:space="preserve">
    <value>Szpilką</value>
  </data>
  <data name="LogoLine2" xml:space="preserve">
    <value>Po Mapie</value>
  </data>
  <data name="NewImage" xml:space="preserve">
    <value>Nowa grafika</value>
  </data>
  <data name="NoPostFound" xml:space="preserve">
    <value>Nie znaleziono żadnych wpisów!</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>404: Nie znaleziono zasobu </value>
  </data>
  <data name="NotFoundMessage" xml:space="preserve">
    <value>Nie znaleźliśmy zasobu.&lt;br/&gt;A szukaliśmy wszędzie! :(</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Hasło</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Hasło jest wymagane</value>
  </data>
  <data name="PostCategory" xml:space="preserve">
    <value>Wyprawa</value>
  </data>
  <data name="PostContent" xml:space="preserve">
    <value>Treść</value>
  </data>
  <data name="PostDescription" xml:space="preserve">
    <value>Opis</value>
  </data>
  <data name="PostLinkTitle" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="PostMore" xml:space="preserve">
    <value>więcej...</value>
  </data>
  <data name="PostTags" xml:space="preserve">
    <value>Tagi</value>
  </data>
  <data name="PostTitle" xml:space="preserve">
    <value>Tytuł</value>
  </data>
  <data name="SearchPlaceholder" xml:space="preserve">
    <value>szukaj na blogu...</value>
  </data>
  <data name="SearchResultForPhrase" xml:space="preserve">
    <value>Wyniki wyszukiwania dla "{0}":</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="TagLinkTitle" xml:space="preserve">
    <value>Wpisy dla taga: {0}</value>
  </data>
  <data name="TagName" xml:space="preserve">
    <value>Nazwa</value>
  </data>
  <data name="TagNotFound" xml:space="preserve">
    <value>Nie znaleziono taga :(</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tagi</value>
  </data>
  <data name="UnexpectedError" xml:space="preserve">
    <value>Nieoczekiwany błąd</value>
  </data>
  <data name="UnexpectedErrorMessage" xml:space="preserve">
    <value>Podczas przetwarzania żądania wystąpił błąd.&lt;br/&gt;Niezmiernie nas to smuci :(</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Prześlij</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Nazwa użytkownika</value>
  </data>
  <data name="UsernameRequired" xml:space="preserve">
    <value>Nazwa użytkownika jest wymagana</value>
  </data>
</root>